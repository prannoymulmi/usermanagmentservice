plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.10"
    id 'java'
}

group = 'com.prannoy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation'org.springdoc:springdoc-openapi-ui:1.6.7'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:2.1.1'
    integrationTestCompile 'org.assertj:assertj-core:3.22.0'


    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    testImplementation('com.h2database:h2:1.4.200')
    testImplementation('org.flywaydb.flyway-test-extensions:flyway-spring5-test:7.0.0')
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


task integrationTest(type: Test) {
    useJUnitPlatform()
    System.setProperty("spring.profiles.active", "test")
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the spring integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.withType(Copy).all {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
